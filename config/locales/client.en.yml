en:
  admin_js:
    admin:
      site_settings:
        categories:
          discourse_activity_pub: "Discourse ActivityPub"
      discourse_activity_pub:
        label: ActivityPub
        actor:
          add:
            category:
              title: Add Category ActivityPub actor
              label: Add Category Actor
            tag:
              title: Add Tag ActivityPub actor
              label: Add Tag Actor
          save:
            title: Save ActivityPub actor
            label: Save Actor
          delete:
            title: Delete ActivityPub actor
            label: Delete Actor
            failed: Not Deleted
            confirm:
              title: "Are you sure you want to delete %{actor}?"
              message: |
                <ul>
                <li>%{actor} will no longer be available to the fediverse.</li>
                <li>The %{model} %{model_type} will not be deleted.</li>
                <li>You can restore deleted actors.</li>
                </ul>
          restore:
            title: Restore ActivityPub actor
            label: Restore
          destroy:
            title: Destroy ActivityPub actor
            label: Destroy
            confirm:
              title: Are you sure you want to destroy %{actor}?
              message: |
                <ul>
                <li>%{actor} will be destroyed.</li>
                <li>The %{model} %{model_type} will not be destroyed.</li>
                <li>You cannot restore destroyed actors.</li>
                </ul>
          edit:
            title: Edit ActivityPub actor
            label: Edit
          deleted:
            title: ActivityPub actor deleted
            label: Deleted
          enabled:
            title: ActivityPub actor enabled
            label: Enabled
          disabled:
            title: ActivityPub actor disabled
            label: Disabled
          site_setting:
            title: Site Settings
            activity_pub_enabled:
              label: Plugin is enabled
              title: The ActivityPub plugin is enabled by the activity pub enabled site setting.
              description: Incoming activities addressed to enabled actors will be processed.
            login_required:
              label: Login is required
              title: Login is required by the login required site setting.
              description: Only outgoing follow requests and the attributes of enabled actors are published.
          username: Username
          username_description: "%{min_length} to %{max_length} letters, numbers, dashes or underscores."
          name: Name
          name_description: Used as a display name on some services.
          default_visibility: Visibility
          default_visibility_description: All posts will be published via ActivityPub with this visibility.
          post_object_type: Post object type
          post_object_type_description: Use Note for short content (e.g. Mastodon) and Article for long content.
          publication_type: Publication type
          publication_type_description: First Post publishes the first post in each topic. Full Topic publishes all posts and ingests replies.
          table:
            actor: Actor
            model: Model
            auth_type: Type
            status: Status
            actions: Actions
          category:
            label: Categories
            title: Category Actors
            none: Select a category
          tag:
            label: Tags
            title: Tag Actors
            none: Select a tag
            filter: filter tags
        log:
          label: Logs
          title: Logs
          created_at: Created At
          level: Level
          message: Message
          json:
            label: JSON
            title: Activity JSON
            show:
              label: JSON
              title: Show Activity JSON
            copy:
              label: Copy
              title: Copy JSON to clipboard.
              success: Copied!
            logged_at: Logged %{logged_at}
  js:
    discourse_activity_pub:
      about:
        navigation:
          label: Federation
          title: Explore this community's ActivityPub federation
        title: Federation
        description: These categories and tags support ActivityPub Federation. If you use Mastodon or other ActivityPub platforms you can follow them to see their topics and posts in your feed.
        categories: Categories
        tags: Tags
        actor:
          follower_count:
            one: "%{count} follower"
            other: "%{count} followers"
      status:
        title:
          publishing_disabled: ActivityPub publishing is disabled by the login required site setting. Incoming activities and outgoing follows are enabled.
          plugin_disabled: The ActivityPub plugin is disabled
          category_read_restricted: ActivityPub does not work with private categories
          model_disabled: ActivityPub is disabled for this %{model_type}
          model_not_ready: ActivityPub is not ready for this %{model_type}
          model_not_active: ActivityPub is not active for this %{model_type}
          model_active:
            first_post: The first post of a new topic will be published %{delay_minutes} minutes after being posted
        label:
          active: Active
          not_active: Not Active
          publishing_disabled: Publishing Disabled
      discovery:
        label: Federation
        description: Federation for %{model_name}
        followers: Followers
        follows: Follows
      banner:
        text: Follow %{model_name} on any service that supports federation
        responsive_text: Federated
        public_full_topic: Each post of each topic will be published publicly via ActivityPub.
        public_first_post: The first post of each topic will be published publicly via ActivityPub.
        followers_only_full_topic: Each post of each topic is published to ActivityPub followers only.
        followers_only_first_post: The first post of each topic is published to ActivityPub followers only.
      handle:
        label: On other ActivityPub services
        description: Use this handle to find and follow this category.
      follow:
        label: Follow
        title: Follow %{actor} via ActivityPub
        domain:
          label: Mastodon
          placeholder: domain
          btn_label: Follow
          btn_title: Follow on this Mastodon domain
          description: domain of your Mastodon account
          verifying: verifying the domain...
          invalid: not a valid Mastodon domain
      actor_follow:
        label: New Follow
        title: New follow for %{actor} via ActivityPub
        find:
          label: Find an actor to follow
          btn_label: Find
          btn_title: Find the handle
          description: "e.g. @announcements@meta.discourse.org"
          validating: validating handle...
          invalid: not a valid handle
          finding: finding the actor...
          not_found: 'could not find "%{handle}"'
        follow:
          label: Follow
          title: 'Create a follow of "%{follow_actor}" for %{actor}'
        following:
          label: Following
          title: '%{actor} is following %{follow_actor}'
        follow_requested:
          label: Follow Requested
          title: '%{actor} has requested to follow %{follow_actor}'
      actor_unfollow:
        label: Unfollow
        title: Unfollow for %{actor} via ActivityPub
        modal_title: Confirm Unfollow
        confirm: Are you sure you want %{actor} to unfollow %{followed_actor}?
      actor_reject:
        label: Reject
        title: Reject follow of %{actor} via ActivityPub
        modal_title: Confirm Reject Follow
        confirm: Are you sure you want to reject %{follower} from following %{actor}?
      follow_table:
        actor: Actor
        user: User
        followed_at: Followed
        follow_pending: pending
        actions: Actions
      visibility:
        label:
          private: Followers Only
          public: Public
        description:
          private: "%{object_type} is addressed to followers."
          public: "%{object_type} is publicly addressed."
      object_type:
        label:
          note: Note
          article: Article
          collection: Collection
          ordered_collection: Ordered Collection
        description:
          note: Best for microblogging platforms (e.g. Mastodon).
          article: Best for longform platforms (e.g. Lemmy).
      publication_type:
        label:
          first_post: First Post
          full_topic: Full Topic
        description:
          first_post: First post of every topic in this %{model_type} is published via ActivityPub.
          full_topic: Every post of every topic in this %{model_type} is published via ActivityPub and replies on other ActivityPub servers are imported as replies in Discourse.
      copy_uri:
        copied: URI Copied!
      model:
        actions: Actions
        group_actors: Group Actors
        attributes: Attributes
        status: Status
        menu: ActivityPub Actions...

    post:
      discourse_activity_pub:
        title: "ActivityPub for Post #%{post_number}"
        status:
          published: "Post was published via ActivityPub on %{datetime}."
          scheduled: "Post is scheduled to be published via ActivityPub on %{datetime}."
          scheduled_past: "Post was scheduled to be published via ActivityPub on %{datetime}."
          deleted: "Post was deleted via ActivityPub on %{datetime}."
          updated: "Post was updated via ActivityPub on %{datetime}."
          published_remote: "Post was published via ActivityPub by %{actor} on %{datetime}."
          not_published: "Post is not published via ActivityPub."
          delivered: "Post was delivered via ActivityPub on %{datetime}."
        info_status:
          published: "Post was published on %{datetime}."
          scheduled: "Post is scheduled to be published on %{datetime}."
          scheduled_past: "Post was scheduled to be published on %{datetime}."
          deleted: "Post was deleted on %{datetime}."
          updated: "Post was updated on %{datetime}."
          published_remote: "Post was published on %{datetime}."
          not_published: "Post is not published."
          delivered: "Post was delivered on %{datetime}."
        actions:
          publish:
            label: "Publish Post #%{post_number}"
            description:
              followers: "Publish Post #%{post_number} and deliver it to the followers of the Group Actors."
              no_followers: "Publish Post #%{post_number} without delivering it. The Group Actors have no followers to deliver to."
              topic_not_published: "Publish is disabled for Post #%{post_number}. Topic #%{topic_id} is not published."
              post_is_scheduled: "Publish is disabled for Post #%{post_number}. Post #%{post_number} is scheduled to be published."
          deliver:
            label: "Deliver Post #%{post_number}"
            description:
              followers: "Deliver Post #%{post_number} to the followers of the Group Actors."
              no_followers: "Delivery is disabled for Post #%{post_number}. The Group Actors have no followers to deliver to."
              topic_not_delivered: "Delivery is disabled for Post #%{post_number}. Topic #%{topic_id} has not been delivered."
              delivered: "Post #%{post_number} was just delivered to the followers of the Group Actors."
          schedule:
            label: "Schedule Post #%{post_number}"
            description:
              followers: "Publish Post #%{post_number} and deliver it to the followers of the Group Actors in %{minutes} minutes."
              no_followers: "Scheduling is disabled for Post #%{post_number}. The Group Actors have no followers to deliver to."
          unschedule:
            label: "Unschedule Post #%{post_number}"
            description: "Unschedule publication of Post #%{post_number}."

    topic:
      discourse_activity_pub:
        title: "ActivityPub for Topic #%{topic_id}"
        status:
          scheduled: Topic is scheduled to be published via ActivityPub on %{datetime}.
          scheduled_past: Topic was scheduled to be published via ActivityPub on %{datetime}.
          published: Topic was published via ActivityPub on %{datetime}.
          published_remote: Topic was published via ActivityPub by %{actor} on %{datetime}.
          deleted: Topic was deleted via ActivityPub on %{datetime}.
          not_published: Topic is not published via ActivityPub.
        info_status:
          scheduled: "Topic is scheduled to be published on %{datetime}."
          scheduled_past: "Topic was scheduled to be published on %{datetime}."
          published: "Topic was published on %{datetime}."
          published_remote: "Topic was published on %{datetime}."
          deleted: "Topic was deleted on %{datetime}."
          not_published: "Topic is not published."
        posts_status:
          label: Posts Status
          published: All posts in this topic are published.
          some_published: "%{count} of %{total} posts in this topic are published."
          none_published: No posts in this topic are published.
          scheduled: This topic is scheduled to be published.
        actions:
          label: Topic Actions
        actors:
          label: Topic Actors
        publish:
          label: Publish All Posts
          description:
            unpublished: "Publish %{count} unpublished posts in Topic #%{topic_id}. Posts will not be delivered to the followers of the Group Actors."
            published: "Publish all posts is disabled. All posts in Topic #%{topic_id} are already published."
            scheduled: "Publish all posts is disabled. Topic #%{topic_id} is scheduled to be published."

    user:
      discourse_activity_pub:
        title: ActivityPub
        actors:
          title: Linked Actors
          description: Posts associated with a linked actor will be attributed to your account.
        actor: Actor
        auth_type: Type
        actions: Actions
        authorize:
          auth_type:
            none:
              label: Select a type...
              placeholder: "enter a domain"
            mastodon:
              title: Mastodon
              placeholder: e.g. mastodon.social
            discourse:
              title: Discourse
              placeholder: e.g. meta.discourse.org
        clear_domain_button:
          title: Clear the verified domain.
        verify_domain_button:
          label: Verify
          title: Verify the domain is supported.
        authorize_button:
          label: Authorize
          title: Authorize an actor on the domain.
        authorize_error:
          title: Failed to Authorize
        authorizations:
          title: Linked Actors
        authorization:
          confirm_remove: Are you sure you want to remove the link with %{handle}?
        remove_authorization_button:
          title: Remove authorization
          label: Remove
